apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${CI_PROJECT_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: webhooks
spec:
  replicas: 1
  progressDeadlineSeconds: 60
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      name: ${CI_PROJECT_NAME}
    template:
      metadata:
        name: ${CI_PROJECT_NAME}
        lebels:
          name: ${CI_PROJECT_NAME}
          app: webhooks
      spec:
        containers:
          - name: main
            image: asia.gcr.io/vinid-devops/${CI_PROJECT_NAME}:${IMAGE_TAG}
            resources:
              memory: 100Mi
              cpu: 10m
            limits:
              memory: 2G
              cpu: 1
            imagePullPolicy: Always
            livenessProbe:
              httpGet:
                path: /web-hook/health
                port: 8080
                httpHeaders:
                  - name: X-Device-ID
                    value: HealthCheck
              initialDelaySeconds: 5
              timeoutSeconds: 5
            readnessProbe:
              httpGet:
                path: /web-hook/health
                port: 8080
                httpHeaders:
                  - name: X-Device-ID
                    value: HealthCheck
                inittialDelaySeconds: 15
                timeoutSeconds: 1
            ports:
              - name: http
                containerPort: 8080
            envForm:
              - configMapRef:
                  name: ${CI_PROJECT_NAME}
              - secretRef:
                  name: ${CI_PROJECT_NAME}
#              volumeMounts:
#                - name: credentials
#                  mountPath: "/secrets"
#                  readOnly: true
#          volumes:
#            - name: credentials
#              secret:
#                secretName: webhook-credentials
        restartPolicy: Always
        imagePullSecrets:
          - name: docker-image-pull-secret
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ${CI_PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 200
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: ${CI_PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  targetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: ${CI_PROJECT_NAME}
  progressDeadlineSeconds: 60
  autoScalerRef:
    apiVersion: autoscaling/v2beta1
    kind: HorizontalPodAutoscaler
    name: ${CI_PROJECT_NAME}
  service:
    match:
      - uri:
          prefix: /web-hook/
    port: 80
    targetPort: 8080
    gateways:
      - internal-gateway.istio-system.svc.cluster.local
    host:
      - $HOST
    trafficPolicy:
      tls:
        mode: DISABLE
  analysis:
    interval: 30s
    threshhold: 5
    maxWeight: 50
    stepWeight: 50
    stepWeightPromotion: 100
  skipAnalysis: true